name: Claude PR Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  claude-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}..HEAD | xargs)
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Review PR with Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Install required packages
          pip install anthropic requests

          # Python script to review PR
          python - <<EOF
          import anthropic
          import requests
          import os
          import json

          # Initialize Anthropic client
          client = anthropic.Anthropic(api_key=os.environ['ANTHROPIC_API_KEY'])

          # Get changed files
          changed_files = os.environ.get('CHANGED_FILES', '').split()

          # Prepare the message for Claude
          system_message = "You are an AI assistant tasked with reviewing pull requests. Provide concise, actionable feedback focusing on code quality, potential bugs, and adherence to best practices."
          user_message = "I'm reviewing a pull request. Here are the changed files:\n\n"
          
          for file in changed_files:
              try:
                  with open(file, 'r') as f:
                      content = f.read()
                  user_message += f"File: {file}\n```\n{content}\n```\n\n"
              except Exception as e:
                  user_message += f"File: {file}\nError reading file: {str(e)}\n\n"
          
          user_message += "Please review these changes and provide feedback."

          # Get Claude's review using the Messages API
          response = client.messages.create(
              model="claude-3-opus-20240229",
              max_tokens=1000,
              system=system_message,
              messages=[
                  {"role": "user", "content": user_message}
              ]
          )

          review_comment = response.content[0].text

          # Post review as a PR comment
          headers = {
              'Authorization': f"token {os.environ['GITHUB_TOKEN']}",
              'Accept': 'application/vnd.github.v3+json'
          }
          data = {
              'body': f"Claude's Review:\n\n{review_comment}"
          }
          repo = os.environ['GITHUB_REPOSITORY']
          pr_number = os.environ['GITHUB_REF'].split('/')[2]
          url = f"https://api.github.com/repos/{repo}/issues/{pr_number}/comments"
          requests.post(url, headers=headers, data=json.dumps(data))
          EOF